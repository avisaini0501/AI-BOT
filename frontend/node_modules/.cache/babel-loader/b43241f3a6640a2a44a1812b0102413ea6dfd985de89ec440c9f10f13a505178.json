{"ast":null,"code":"'use strict';\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === 'm') throw new TypeError('Private method is not writable');\n  if (kind === 'a' && !f) throw new TypeError('Private accessor was defined without a setter');\n  if (typeof state === 'function' ? receiver !== state || !f : !state.has(receiver)) throw new TypeError('Cannot write private member to an object whose class did not declare it');\n  return kind === 'a' ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === 'a' && !f) throw new TypeError('Private accessor was defined without a getter');\n  if (typeof state === 'function' ? receiver !== state || !f : !state.has(receiver)) throw new TypeError('Cannot read private member from an object whose class did not declare it');\n  return kind === 'm' ? f : kind === 'a' ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.toBase64 = exports.getHeader = exports.isHeadersProtocol = exports.isRunningInBrowser = exports.debug = exports.hasOwn = exports.isEmptyObj = exports.maybeCoerceBoolean = exports.maybeCoerceFloat = exports.maybeCoerceInteger = exports.coerceBoolean = exports.coerceFloat = exports.coerceInteger = exports.readEnv = exports.ensurePresent = exports.castToError = exports.sleep = exports.safeJSON = exports.isRequestOptions = exports.createResponseHeaders = exports.PagePromise = exports.AbstractPage = exports.APIResource = exports.APIClient = exports.APIPromise = exports.createForm = exports.multipartFormRequestOptions = exports.maybeMultipartFormRequestOptions = void 0;\nconst version_1 = require('./version.js');\nconst streaming_1 = require('./streaming.js');\nconst error_1 = require('./error.js');\nconst agent_1 = require('openai/_shims/agent.js');\nconst fetch_1 = require('openai/_shims/fetch.js');\nconst uploads_1 = require('./uploads.js');\nvar uploads_2 = require('./uploads.js');\nObject.defineProperty(exports, 'maybeMultipartFormRequestOptions', {\n  enumerable: true,\n  get: function () {\n    return uploads_2.maybeMultipartFormRequestOptions;\n  }\n});\nObject.defineProperty(exports, 'multipartFormRequestOptions', {\n  enumerable: true,\n  get: function () {\n    return uploads_2.multipartFormRequestOptions;\n  }\n});\nObject.defineProperty(exports, 'createForm', {\n  enumerable: true,\n  get: function () {\n    return uploads_2.createForm;\n  }\n});\nconst MAX_RETRIES = 2;\nasync function defaultParseResponse(props) {\n  const {\n    response\n  } = props;\n  if (props.options.stream) {\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n    return new streaming_1.Stream(response, props.controller);\n  }\n  const contentType = response.headers.get('content-type');\n  if (contentType === null || contentType === void 0 ? void 0 : contentType.includes('application/json')) {\n    const json = await response.json();\n    debug('response', response.status, response.url, response.headers, json);\n    return json;\n  }\n  // TODO handle blob, arraybuffer, other content types, etc.\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n  return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nclass APIPromise extends Promise {\n  constructor(responsePromise, parseResponse = defaultParseResponse) {\n    super(resolve => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null);\n    });\n    this.responsePromise = responsePromise;\n    this.parseResponse = parseResponse;\n  }\n  _thenUnwrap(transform) {\n    return new APIPromise(this.responsePromise, async props => transform(await this.parseResponse(props)));\n  }\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   */\n  asResponse() {\n    return this.responsePromise.then(p => p.response);\n  }\n  /**\n   * Gets the parsed response data and the raw `Response` instance.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   */\n  async withResponse() {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return {\n      data,\n      response\n    };\n  }\n  parse() {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n  then(onfulfilled, onrejected) {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n  catch(onrejected) {\n    return this.parse().catch(onrejected);\n  }\n  finally(onfinally) {\n    return this.parse().finally(onfinally);\n  }\n}\nexports.APIPromise = APIPromise;\nclass APIClient {\n  constructor({\n    baseURL,\n    maxRetries,\n    timeout = 600000,\n    // 10 minutes\n    httpAgent,\n    fetch: overridenFetch\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries !== null && maxRetries !== void 0 ? maxRetries : MAX_RETRIES);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n    this.fetch = overridenFetch !== null && overridenFetch !== void 0 ? overridenFetch : fetch_1.fetch;\n  }\n  authHeaders(opts) {\n    return {};\n  }\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  defaultHeaders(opts) {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts)\n    };\n  }\n  /**\n   * Override this to add your own headers validation:\n   */\n  validateHeaders(headers, customHeaders) {}\n  defaultIdempotencyKey() {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n  get(path, opts) {\n    return this.methodRequest('get', path, opts);\n  }\n  post(path, opts) {\n    return this.methodRequest('post', path, opts);\n  }\n  patch(path, opts) {\n    return this.methodRequest('patch', path, opts);\n  }\n  put(path, opts) {\n    return this.methodRequest('put', path, opts);\n  }\n  delete(path, opts) {\n    return this.methodRequest('delete', path, opts);\n  }\n  methodRequest(method, path, opts) {\n    return this.request(Promise.resolve(opts).then(opts => ({\n      method,\n      path,\n      ...opts\n    })));\n  }\n  getAPIList(path, Page, opts) {\n    return this.requestAPIList(Page, {\n      method: 'get',\n      path,\n      ...opts\n    });\n  }\n  calculateContentLength(body) {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    }\n    return null;\n  }\n  buildRequest(options) {\n    var _a, _b, _c, _d, _e, _f;\n    const {\n      method,\n      path,\n      query,\n      headers = {}\n    } = options;\n    const body = (0, uploads_1.isMultipartBody)(options.body) ? options.body.body : options.body ? JSON.stringify(options.body, null, 2) : null;\n    const contentLength = this.calculateContentLength(body);\n    const url = this.buildURL(path, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    const timeout = (_a = options.timeout) !== null && _a !== void 0 ? _a : this.timeout;\n    const httpAgent = (_c = (_b = options.httpAgent) !== null && _b !== void 0 ? _b : this.httpAgent) !== null && _c !== void 0 ? _c : (0, agent_1.getDefaultAgent)(url);\n    const minAgentTimeout = timeout + 1000;\n    if (typeof ((_d = httpAgent === null || httpAgent === void 0 ? void 0 : httpAgent.options) === null || _d === void 0 ? void 0 : _d.timeout) === 'number' && minAgentTimeout > ((_e = httpAgent.options.timeout) !== null && _e !== void 0 ? _e : 0)) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      httpAgent.options.timeout = minAgentTimeout;\n    }\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n    const reqHeaders = {\n      ...(contentLength && {\n        'Content-Length': contentLength\n      }),\n      ...this.defaultHeaders(options),\n      ...headers\n    };\n    // let builtin fetch set the Content-Type for multipart bodies\n    if ((0, uploads_1.isMultipartBody)(options.body) && !fetch_1.isPolyfilled) {\n      delete reqHeaders['Content-Type'];\n    }\n    // Strip any headers being explicitly omitted with null\n    Object.keys(reqHeaders).forEach(key => reqHeaders[key] === null && delete reqHeaders[key]);\n    const req = {\n      method,\n      ...(body && {\n        body: body\n      }),\n      headers: reqHeaders,\n      ...(httpAgent && {\n        agent: httpAgent\n      }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: (_f = options.signal) !== null && _f !== void 0 ? _f : null\n    };\n    this.validateHeaders(reqHeaders, headers);\n    return {\n      req,\n      url,\n      timeout\n    };\n  }\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  async prepareRequest(request, {\n    url,\n    options\n  }) {}\n  parseHeaders(headers) {\n    return !headers ? {} : Symbol.iterator in headers ? Object.fromEntries(Array.from(headers).map(header => [...header])) : {\n      ...headers\n    };\n  }\n  makeStatusError(status, error, message, headers) {\n    return error_1.APIError.generate(status, error, message, headers);\n  }\n  request(options, remainingRetries = null) {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n  async makeRequest(optionsInput, retriesRemaining) {\n    var _a, _b, _c;\n    const options = await optionsInput;\n    if (retriesRemaining == null) {\n      retriesRemaining = (_a = options.maxRetries) !== null && _a !== void 0 ? _a : this.maxRetries;\n    }\n    const {\n      req,\n      url,\n      timeout\n    } = this.buildRequest(options);\n    await this.prepareRequest(req, {\n      url,\n      options\n    });\n    debug('request', url, options, req.headers);\n    if ((_b = options.signal) === null || _b === void 0 ? void 0 : _b.aborted) {\n      throw new error_1.APIUserAbortError();\n    }\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(exports.castToError);\n    if (response instanceof Error) {\n      if ((_c = options.signal) === null || _c === void 0 ? void 0 : _c.aborted) {\n        throw new error_1.APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new error_1.APIConnectionTimeoutError();\n      }\n      throw new error_1.APIConnectionError({\n        cause: response\n      });\n    }\n    const responseHeaders = (0, exports.createResponseHeaders)(response.headers);\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n      const errText = await response.text().catch(() => 'Unknown');\n      const errJSON = (0, exports.safeJSON)(errText);\n      const errMessage = errJSON ? undefined : errText;\n      debug('response', response.status, url, responseHeaders, errMessage);\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n    return {\n      response,\n      options,\n      controller\n    };\n  }\n  requestAPIList(Page, options) {\n    const request = this.makeRequest(options, null);\n    return new PagePromise(this, request, Page);\n  }\n  buildURL(path, query) {\n    const url = isAbsoluteURL(path) ? new URL(path) : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = {\n        ...defaultQuery,\n        ...query\n      };\n    }\n    if (query) {\n      url.search = this.stringifyQuery(query);\n    }\n    return url.toString();\n  }\n  stringifyQuery(query) {\n    return Object.entries(query).filter(([_, value]) => typeof value !== 'undefined').map(([key, value]) => {\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n      }\n      if (value === null) {\n        return `${encodeURIComponent(key)}=`;\n      }\n      throw new Error(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n    }).join('&');\n  }\n  async fetchWithTimeout(url, init, ms, controller) {\n    const {\n      signal,\n      ...options\n    } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n    const timeout = setTimeout(() => controller.abort(), ms);\n    return this.getRequestClient().fetch(url, {\n      signal: controller.signal,\n      ...options\n    }).finally(() => {\n      clearTimeout(timeout);\n    });\n  }\n  getRequestClient() {\n    return {\n      fetch: this.fetch\n    };\n  }\n  shouldRetry(response) {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n    return false;\n  }\n  async retryRequest(options, retriesRemaining, responseHeaders) {\n    var _a;\n    retriesRemaining -= 1;\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    //\n    // TODO: we may want to handle the case where the header is using the http-date syntax: \"Retry-After: <http-date>\".\n    // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After#syntax for details.\n    const retryAfter = parseInt((responseHeaders === null || responseHeaders === void 0 ? void 0 : responseHeaders['retry-after']) || '');\n    const maxRetries = (_a = options.maxRetries) !== null && _a !== void 0 ? _a : this.maxRetries;\n    const timeout = this.calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) * 1000;\n    await (0, exports.sleep)(timeout);\n    return this.makeRequest(options, retriesRemaining);\n  }\n  calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 2;\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says.\n    if (Number.isInteger(retryAfter) && retryAfter <= 60) {\n      return retryAfter;\n    }\n    const numRetries = maxRetries - retriesRemaining;\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(numRetries - 1, 2), maxRetryDelay);\n    // Apply some jitter, plus-or-minus half a second.\n    const jitter = Math.random() - 0.5;\n    return sleepSeconds + jitter;\n  }\n  getUserAgent() {\n    return `${this.constructor.name}/JS ${version_1.VERSION}`;\n  }\n}\nexports.APIClient = APIClient;\nclass APIResource {\n  constructor(client) {\n    this.client = client;\n    this.get = client.get.bind(client);\n    this.post = client.post.bind(client);\n    this.patch = client.patch.bind(client);\n    this.put = client.put.bind(client);\n    this.delete = client.delete.bind(client);\n    this.getAPIList = client.getAPIList.bind(client);\n  }\n}\nexports.APIResource = APIResource;\nclass AbstractPage {\n  constructor(client, response, body, options) {\n    _AbstractPage_client.set(this, void 0);\n    __classPrivateFieldSet(this, _AbstractPage_client, client, 'f');\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n  hasNextPage() {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n  async getNextPage() {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new Error('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n    }\n    const nextOptions = {\n      ...this.options\n    };\n    if ('params' in nextInfo) {\n      nextOptions.query = {\n        ...nextOptions.query,\n        ...nextInfo.params\n      };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await __classPrivateFieldGet(this, _AbstractPage_client, 'f').requestAPIList(this.constructor, nextOptions);\n  }\n  async *iterPages() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n  async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\nexports.AbstractPage = AbstractPage;\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nclass PagePromise extends APIPromise {\n  constructor(client, request, Page) {\n    super(request, async props => new Page(client, props.response, await defaultParseResponse(props), props.options));\n  }\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator]() {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\nexports.PagePromise = PagePromise;\nconst createResponseHeaders = headers => {\n  return new Proxy(Object.fromEntries(\n  // @ts-ignore\n  headers.entries()), {\n    get(target, name) {\n      const key = name.toString();\n      return target[key.toLowerCase()] || target[key];\n    }\n  });\n};\nexports.createResponseHeaders = createResponseHeaders;\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true\n};\nconst isRequestOptions = obj => {\n  return typeof obj === 'object' && obj !== null && !isEmptyObj(obj) && Object.keys(obj).every(k => hasOwn(requestOptionsKeys, k));\n};\nexports.isRequestOptions = isRequestOptions;\nconst getPlatformProperties = () => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': Deno.version\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version\n    };\n  }\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': version_1.VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown'\n  };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n  // NOTE: The order matters here!\n  const browserPatterns = [{\n    key: 'edge',\n    pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'chrome',\n    pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'firefox',\n    pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'safari',\n    pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n  }];\n  // Find the FIRST matching browser\n  for (const {\n    key,\n    pattern\n  } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n      return {\n        browser: key,\n        version: `${major}.${minor}.${patch}`\n      };\n    }\n  }\n  return null;\n}\nconst normalizeArch = arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\nconst normalizePlatform = platform => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n  platform = platform.toLowerCase();\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n  return _platformHeaders !== null && _platformHeaders !== void 0 ? _platformHeaders : _platformHeaders = getPlatformProperties();\n};\nconst safeJSON = text => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\nexports.safeJSON = safeJSON;\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = url => {\n  return startsWithSchemeRegexp.test(url);\n};\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nexports.sleep = sleep;\nconst validatePositiveInteger = (name, n) => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new Error(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new Error(`${name} must be a positive integer`);\n  }\n  return n;\n};\nconst castToError = err => {\n  if (err instanceof Error) return err;\n  return new Error(err);\n};\nexports.castToError = castToError;\nconst ensurePresent = value => {\n  if (value == null) throw new Error(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\nexports.ensurePresent = ensurePresent;\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nconst readEnv = env => {\n  var _a, _b, _c, _d;\n  if (typeof process !== 'undefined') {\n    return (_b = (_a = process.env) === null || _a === void 0 ? void 0 : _a[env]) !== null && _b !== void 0 ? _b : undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return (_d = (_c = Deno.env) === null || _c === void 0 ? void 0 : _c.get) === null || _d === void 0 ? void 0 : _d.call(_c, env);\n  }\n  return undefined;\n};\nexports.readEnv = readEnv;\nconst coerceInteger = value => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n  throw new Error(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexports.coerceInteger = coerceInteger;\nconst coerceFloat = value => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n  throw new Error(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexports.coerceFloat = coerceFloat;\nconst coerceBoolean = value => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\nexports.coerceBoolean = coerceBoolean;\nconst maybeCoerceInteger = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return (0, exports.coerceInteger)(value);\n};\nexports.maybeCoerceInteger = maybeCoerceInteger;\nconst maybeCoerceFloat = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return (0, exports.coerceFloat)(value);\n};\nexports.maybeCoerceFloat = maybeCoerceFloat;\nconst maybeCoerceBoolean = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return (0, exports.coerceBoolean)(value);\n};\nexports.maybeCoerceBoolean = maybeCoerceBoolean;\n// https://stackoverflow.com/a/34491287\nfunction isEmptyObj(obj) {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\nexports.isEmptyObj = isEmptyObj;\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexports.hasOwn = hasOwn;\nfunction debug(action, ...args) {\n  if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n    console.log(`OpenAI:DEBUG:${action}`, ...args);\n  }\n}\nexports.debug = debug;\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nconst isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\nexports.isRunningInBrowser = isRunningInBrowser;\nconst isHeadersProtocol = headers => {\n  return typeof (headers === null || headers === void 0 ? void 0 : headers.get) === 'function';\n};\nexports.isHeadersProtocol = isHeadersProtocol;\nconst getHeader = (headers, key) => {\n  const lowerKey = key.toLowerCase();\n  if ((0, exports.isHeadersProtocol)(headers)) return headers.get(key) || headers.get(lowerKey);\n  const value = headers[key] || headers[lowerKey];\n  if (Array.isArray(value)) {\n    if (value.length <= 1) return value[0];\n    console.warn(`Received ${value.length} entries for the ${key} header, using the first entry.`);\n    return value[0];\n  }\n  return value;\n};\nexports.getHeader = getHeader;\n/**\n * Encodes a string to Base64 format.\n */\nconst toBase64 = str => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n  throw new Error('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexports.toBase64 = toBase64;","map":{"version":3,"names":["__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","call","value","get","_AbstractPage_client","exports","toBase64","getHeader","isHeadersProtocol","isRunningInBrowser","debug","hasOwn","isEmptyObj","maybeCoerceBoolean","maybeCoerceFloat","maybeCoerceInteger","coerceBoolean","coerceFloat","coerceInteger","readEnv","ensurePresent","safeJSON","isRequestOptions","createResponseHeaders","PagePromise","createForm","multipartFormRequestOptions","maybeMultipartFormRequestOptions","version_1","require","error_1","agent_1","uploads_2","defineProperty","defaultParseResponse","props","response","options","stream","streaming_1","Stream","controller","contentType","headers","includes","json","status","url","text","APIPromise","Promise","constructor","responsePromise","parseResponse","resolve","_thenUnwrap","transform","asResponse","withResponse","data","all","parse","parsedPromise","then","onfulfilled","onrejected","catch","finally","onfinally","baseURL","maxRetries","validatePositiveInteger","MAX_RETRIES","timeout","httpAgent","overridenFetch","fetch_1","fetch","authHeaders","opts","defaultHeaders","getUserAgent","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","methodRequest","path","method","request","calculateContentLength","body","Buffer","byteLength","toString","TextEncoder","encoded","encoder","encode","length","buildRequest","_a","_b","_c","_d","_e","_f","uploads_1","isMultipartBody","JSON","stringify","contentLength","buildURL","query","getDefaultAgent","minAgentTimeout","idempotencyHeader","idempotencyKey","reqHeaders","isPolyfilled","forEach","key","req","agent","signal","prepareRequest","parseHeaders","Symbol","iterator","Object","fromEntries","Array","from","map","header","makeStatusError","error","message","APIError","generate","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","APIUserAbortError","AbortController","fetchWithTimeout","castToError","Error","retryRequest","name","APIConnectionTimeoutError","APIConnectionError","cause","responseHeaders","ok","shouldRetry","errText","errJSON","errMessage","undefined","err","requestAPIList","Page","URL","endsWith","startsWith","slice","defaultQuery","search","stringifyQuery","entries","_","encodeURIComponent","init","ms","addEventListener","abort","setTimeout","getRequestClient","clearTimeout","shouldRetryHeader","parseInt","calculateRetryTimeoutSeconds","retryAfter","sleep","initialRetryDelay","maxRetryDelay","jitter","Math","random","sleepSeconds","VERSION","client","bind","post","patch","put","delete","getAPIList","APIResource","AbstractPage","set","hasNextPage","items","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","iterPages","page","WeakMap","asyncIterator","item","Proxy","target","toLowerCase","obj","keys","every","k","requestOptionsKeys","getPlatformProperties","Deno","build","normalizePlatform","os","normalizeArch","arch","version","EdgeRuntime","process","prototype","platform","browserInfo","getBrowserInfo","browser","navigator","browserPatterns","pattern","match","exec","userAgent","major","minor","_platformHeaders","getPlatformHeaders","startsWithSchemeRegexp","RegExp","isAbsoluteURL","test","n","Number","isInteger","env","round","parseFloat","Boolean"],"sources":["src/core.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}