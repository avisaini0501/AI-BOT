{"ast":null,"code":"const axios = require('axios');\nconst qs = require('qs');\nclass BardAPI {\n  constructor() {\n    this.timeout = 6000;\n    this.proxies = null;\n    this.conversation_id = 'c_67887788a2c4ace8';\n    this.response_id = '';\n    this.choice_id = '';\n    this.session = axios.create();\n    this.params = {\n      bl: 'boq_assistant-bard-web-server_20230419.00_p1',\n      _reqid: '',\n      rt: 'c'\n    };\n    this.data = {\n      'f.req': '',\n      at: ''\n    };\n    this.post_url = 'https://bard.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate';\n  }\n  async setSession(key = '', apiKey = '') {\n    const headers = {\n      \"Host\": \"bard.google.com\",\n      \"X-Same-Domain\": \"1\",\n      \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36\",\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n      \"Origin\": \"https://bard.google.com\",\n      \"Referer\": \"https://bard.google.com/\"\n    };\n    this.session.defaults.headers = headers;\n    this.session.defaults.headers.Cookie = `${key}=${apiKey}`;\n    await this.setSnim0e();\n  }\n  setParamsAndData(req_id, input_text_struct) {\n    this.params._reqid = String(req_id);\n    this.data['f.req'] = JSON.stringify([null, JSON.stringify(input_text_struct)]);\n  }\n  async getBardResponse(input_text) {\n    let req_id = parseInt(Math.random().toString().slice(2, 6));\n    const input_text_struct = [[input_text], null, [this.conversation_id, this.response_id, this.choice_id]];\n    this.setParamsAndData(req_id, input_text_struct);\n    const response = await this.session.post(this.post_url, qs.stringify(this.data), {\n      params: this.params,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    const resp_dict = JSON.parse(response.data.split('\\n')[3])[0][2];\n    if (resp_dict === null) {\n      return {\n        content: `Response Error: ${response.data}.`\n      };\n    }\n    const parsed_answer = JSON.parse(resp_dict);\n    const bard_answer = {\n      content: parsed_answer[0][0],\n      conversation_id: parsed_answer[1][0],\n      response_id: parsed_answer[1][1],\n      factualityQueries: parsed_answer[3],\n      textQuery: parsed_answer[2][0] || '',\n      choices: parsed_answer[4].map(i => ({\n        id: i[0],\n        content: i[1]\n      }))\n    };\n    this.conversation_id = bard_answer.conversation_id;\n    this.response_id = bard_answer.response_id;\n    this.choice_id = bard_answer.choices[0].id;\n    req_id += 100000;\n    return bard_answer;\n  }\n  async setSnim0e() {\n    try {\n      const response = await this.session.get(\"https://bard.google.com/\", {\n        timeout: this.timeout,\n        proxies: this.proxies\n      });\n      if (response.status !== 200) {\n        throw new Error(`Response Status: ${response.status}`);\n      }\n      const regex = /SNlM0e\":\"(.*?)\"/;\n      const match = response.data.match(regex);\n      if (match) {\n        this.data.at = match[1];\n      } else {\n        throw new Error(\"Pattern not found.\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\nmodule.exports = BardAPI;","map":{"version":3,"names":["axios","require","qs","BardAPI","constructor","timeout","proxies","conversation_id","response_id","choice_id","session","create","params","bl","_reqid","rt","data","at","post_url","setSession","key","apiKey","headers","defaults","Cookie","setSnim0e","setParamsAndData","req_id","input_text_struct","String","JSON","stringify","getBardResponse","input_text","parseInt","Math","random","toString","slice","response","post","resp_dict","parse","split","content","parsed_answer","bard_answer","factualityQueries","textQuery","choices","map","i","id","get","status","Error","regex","match","error","console","module","exports"],"sources":["C:/Users/Lenovo/Desktop/clone/node_modules/bard-api-node/src/bardAPI.js"],"sourcesContent":["const axios = require('axios');\nconst qs = require('qs');\n\nclass BardAPI {\n  constructor() {\n    this.timeout = 6000;\n    this.proxies = null;\n    this.conversation_id = 'c_67887788a2c4ace8';\n    this.response_id = '';\n    this.choice_id = '';\n    this.session = axios.create();\n    this.params = {\n      bl: 'boq_assistant-bard-web-server_20230419.00_p1',\n      _reqid: '',\n      rt: 'c',\n    };\n    this.data = {\n      'f.req': '',\n      at: '',\n    };\n    this.post_url =\n      'https://bard.google.com/_/BardChatUi/data/assistant.lamda.BardFrontendService/StreamGenerate';\n  }\n\n  async setSession(key = '', apiKey = '') {\n    const headers = {\n      \"Host\": \"bard.google.com\",\n      \"X-Same-Domain\": \"1\",\n      \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36\",\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n      \"Origin\": \"https://bard.google.com\",\n      \"Referer\": \"https://bard.google.com/\",\n    };\n    this.session.defaults.headers = headers;\n    this.session.defaults.headers.Cookie = `${key}=${apiKey}`;\n    await this.setSnim0e();\n  }\n\n\n  setParamsAndData(req_id, input_text_struct) {\n    this.params._reqid = String(req_id);\n    this.data['f.req'] = JSON.stringify([null, JSON.stringify(input_text_struct)]);\n\n  }\n\n  async getBardResponse(input_text) {\n    let req_id = parseInt(Math.random().toString().slice(2, 6));\n\n    const input_text_struct = [\n      [input_text],\n      null,\n      [this.conversation_id, this.response_id, this.choice_id],\n    ];\n\n    this.setParamsAndData(req_id, input_text_struct);\n\n    const response = await this.session.post(this.post_url, qs.stringify(this.data), {\n      params: this.params,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    });\n    const resp_dict = JSON.parse(response.data.split('\\n')[3])[0][2];\n\n    if (resp_dict === null) {\n      return { content: `Response Error: ${response.data}.` };\n    }\n\n    const parsed_answer = JSON.parse(resp_dict);\n    const bard_answer = {\n      content: parsed_answer[0][0],\n      conversation_id: parsed_answer[1][0],\n      response_id: parsed_answer[1][1],\n      factualityQueries: parsed_answer[3],\n      textQuery: parsed_answer[2][0] || '',\n      choices: parsed_answer[4].map((i) => ({ id: i[0], content: i[1] })),\n    };\n\n    this.conversation_id = bard_answer.conversation_id;\n    this.response_id = bard_answer.response_id;\n    this.choice_id = bard_answer.choices[0].id;\n    req_id += 100000;\n\n    return bard_answer;\n  }\n\n  async setSnim0e() {\n    try {\n      const response = await this.session.get(\"https://bard.google.com/\", {\n        timeout: this.timeout,\n        proxies: this.proxies,\n      });\n\n      if (response.status !== 200) {\n        throw new Error(`Response Status: ${response.status}`);\n      }\n\n      const regex = /SNlM0e\":\"(.*?)\"/;\n      const match = response.data.match(regex);\n\n      if (match) {\n        this.data.at = match[1];\n      } else {\n        throw new Error(\"Pattern not found.\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n}\nmodule.exports = BardAPI;\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AAExB,MAAME,OAAO,CAAC;EACZC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,eAAe,GAAG,oBAAoB;IAC3C,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,OAAO,GAAGV,KAAK,CAACW,MAAM,CAAC,CAAC;IAC7B,IAAI,CAACC,MAAM,GAAG;MACZC,EAAE,EAAE,8CAA8C;MAClDC,MAAM,EAAE,EAAE;MACVC,EAAE,EAAE;IACN,CAAC;IACD,IAAI,CAACC,IAAI,GAAG;MACV,OAAO,EAAE,EAAE;MACXC,EAAE,EAAE;IACN,CAAC;IACD,IAAI,CAACC,QAAQ,GACX,8FAA8F;EAClG;EAEA,MAAMC,UAAUA,CAACC,GAAG,GAAG,EAAE,EAAEC,MAAM,GAAG,EAAE,EAAE;IACtC,MAAMC,OAAO,GAAG;MACd,MAAM,EAAE,iBAAiB;MACzB,eAAe,EAAE,GAAG;MACpB,YAAY,EAAE,gHAAgH;MAC9H,cAAc,EAAE,iDAAiD;MACjE,QAAQ,EAAE,yBAAyB;MACnC,SAAS,EAAE;IACb,CAAC;IACD,IAAI,CAACZ,OAAO,CAACa,QAAQ,CAACD,OAAO,GAAGA,OAAO;IACvC,IAAI,CAACZ,OAAO,CAACa,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAI,GAAEJ,GAAI,IAAGC,MAAO,EAAC;IACzD,MAAM,IAAI,CAACI,SAAS,CAAC,CAAC;EACxB;EAGAC,gBAAgBA,CAACC,MAAM,EAAEC,iBAAiB,EAAE;IAC1C,IAAI,CAAChB,MAAM,CAACE,MAAM,GAAGe,MAAM,CAACF,MAAM,CAAC;IACnC,IAAI,CAACX,IAAI,CAAC,OAAO,CAAC,GAAGc,IAAI,CAACC,SAAS,CAAC,CAAC,IAAI,EAAED,IAAI,CAACC,SAAS,CAACH,iBAAiB,CAAC,CAAC,CAAC;EAEhF;EAEA,MAAMI,eAAeA,CAACC,UAAU,EAAE;IAChC,IAAIN,MAAM,GAAGO,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAE3D,MAAMV,iBAAiB,GAAG,CACxB,CAACK,UAAU,CAAC,EACZ,IAAI,EACJ,CAAC,IAAI,CAAC1B,eAAe,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,SAAS,CAAC,CACzD;IAED,IAAI,CAACiB,gBAAgB,CAACC,MAAM,EAAEC,iBAAiB,CAAC;IAEhD,MAAMW,QAAQ,GAAG,MAAM,IAAI,CAAC7B,OAAO,CAAC8B,IAAI,CAAC,IAAI,CAACtB,QAAQ,EAAEhB,EAAE,CAAC6B,SAAS,CAAC,IAAI,CAACf,IAAI,CAAC,EAAE;MAC/EJ,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBU,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,MAAMmB,SAAS,GAAGX,IAAI,CAACY,KAAK,CAACH,QAAQ,CAACvB,IAAI,CAAC2B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEhE,IAAIF,SAAS,KAAK,IAAI,EAAE;MACtB,OAAO;QAAEG,OAAO,EAAG,mBAAkBL,QAAQ,CAACvB,IAAK;MAAG,CAAC;IACzD;IAEA,MAAM6B,aAAa,GAAGf,IAAI,CAACY,KAAK,CAACD,SAAS,CAAC;IAC3C,MAAMK,WAAW,GAAG;MAClBF,OAAO,EAAEC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5BtC,eAAe,EAAEsC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACpCrC,WAAW,EAAEqC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChCE,iBAAiB,EAAEF,aAAa,CAAC,CAAC,CAAC;MACnCG,SAAS,EAAEH,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE;MACpCI,OAAO,EAAEJ,aAAa,CAAC,CAAC,CAAC,CAACK,GAAG,CAAEC,CAAC,KAAM;QAAEC,EAAE,EAAED,CAAC,CAAC,CAAC,CAAC;QAAEP,OAAO,EAAEO,CAAC,CAAC,CAAC;MAAE,CAAC,CAAC;IACpE,CAAC;IAED,IAAI,CAAC5C,eAAe,GAAGuC,WAAW,CAACvC,eAAe;IAClD,IAAI,CAACC,WAAW,GAAGsC,WAAW,CAACtC,WAAW;IAC1C,IAAI,CAACC,SAAS,GAAGqC,WAAW,CAACG,OAAO,CAAC,CAAC,CAAC,CAACG,EAAE;IAC1CzB,MAAM,IAAI,MAAM;IAEhB,OAAOmB,WAAW;EACpB;EAEA,MAAMrB,SAASA,CAAA,EAAG;IAChB,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAM,IAAI,CAAC7B,OAAO,CAAC2C,GAAG,CAAC,0BAA0B,EAAE;QAClEhD,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBC,OAAO,EAAE,IAAI,CAACA;MAChB,CAAC,CAAC;MAEF,IAAIiC,QAAQ,CAACe,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAE,oBAAmBhB,QAAQ,CAACe,MAAO,EAAC,CAAC;MACxD;MAEA,MAAME,KAAK,GAAG,iBAAiB;MAC/B,MAAMC,KAAK,GAAGlB,QAAQ,CAACvB,IAAI,CAACyC,KAAK,CAACD,KAAK,CAAC;MAExC,IAAIC,KAAK,EAAE;QACT,IAAI,CAACzC,IAAI,CAACC,EAAE,GAAGwC,KAAK,CAAC,CAAC,CAAC;MACzB,CAAC,MAAM;QACL,MAAM,IAAIF,KAAK,CAAC,oBAAoB,CAAC;MACvC;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;AACF;AACAE,MAAM,CAACC,OAAO,GAAG1D,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}