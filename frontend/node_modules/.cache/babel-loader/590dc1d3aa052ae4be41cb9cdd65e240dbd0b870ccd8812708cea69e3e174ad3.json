{"ast":null,"code":"'use strict';\n\n// File generated from our OpenAPI spec by Stainless.\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.CursorPage = exports.Page = void 0;\nconst core_1 = require('./core.js');\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nclass Page extends core_1.AbstractPage {\n  constructor(client, response, body, options) {\n    super(client, response, body, options);\n    this.object = body.object;\n    this.data = body.data;\n  }\n  getPaginatedItems() {\n    return this.data;\n  }\n  // @deprecated Please use `nextPageInfo()` instead\n  /**\n   * This page represents a response that isn't actually paginated at the API level\n   * so there will never be any next page params.\n   */\n  nextPageParams() {\n    return null;\n  }\n  nextPageInfo() {\n    return null;\n  }\n}\nexports.Page = Page;\nclass CursorPage extends core_1.AbstractPage {\n  constructor(client, response, body, options) {\n    super(client, response, body, options);\n    this.data = body.data;\n  }\n  getPaginatedItems() {\n    return this.data;\n  }\n  // @deprecated Please use `nextPageInfo()` instead\n  nextPageParams() {\n    const info = this.nextPageInfo();\n    if (!info) return null;\n    if ('params' in info) return info.params;\n    const params = Object.fromEntries(info.url.searchParams);\n    if (!Object.keys(params).length) return null;\n    return params;\n  }\n  nextPageInfo() {\n    var _a, _b;\n    if (!((_a = this.data) === null || _a === void 0 ? void 0 : _a.length)) {\n      return null;\n    }\n    const next = (_b = this.data[this.data.length - 1]) === null || _b === void 0 ? void 0 : _b.id;\n    if (!next) return null;\n    return {\n      params: {\n        after: next\n      }\n    };\n  }\n}\nexports.CursorPage = CursorPage;","map":{"version":3,"names":["core_1","require","Page","AbstractPage","constructor","client","response","body","options","object","data","getPaginatedItems","nextPageParams","nextPageInfo","exports","CursorPage","info","params","Object","fromEntries","url","searchParams","keys","length","_a","_b","next","id","after"],"sources":["C:\\Users\\Lenovo\\Desktop\\clone\\node_modules\\openai\\src\\pagination.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless.\n\nimport { AbstractPage, Response, APIClient, FinalRequestOptions, PageInfo } from './core.js';\n\nexport interface PageResponse<Item> {\n  data: Array<Item>;\n\n  object: string;\n}\n\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page<Item> extends AbstractPage<Item> implements PageResponse<Item> {\n  object: string;\n\n  data: Array<Item>;\n\n  constructor(client: APIClient, response: Response, body: PageResponse<Item>, options: FinalRequestOptions) {\n    super(client, response, body, options);\n\n    this.object = body.object;\n    this.data = body.data;\n  }\n\n  getPaginatedItems(): Item[] {\n    return this.data;\n  }\n\n  // @deprecated Please use `nextPageInfo()` instead\n  /**\n   * This page represents a response that isn't actually paginated at the API level\n   * so there will never be any next page params.\n   */\n  nextPageParams(): null {\n    return null;\n  }\n\n  nextPageInfo(): null {\n    return null;\n  }\n}\n\nexport interface CursorPageResponse<Item> {\n  data: Array<Item>;\n}\n\nexport interface CursorPageParams {\n  /**\n   * Identifier for the last job from the previous pagination request.\n   */\n  after?: string;\n\n  /**\n   * Number of fine-tuning jobs to retrieve.\n   */\n  limit?: number;\n}\n\nexport class CursorPage<Item extends { id: string }>\n  extends AbstractPage<Item>\n  implements CursorPageResponse<Item>\n{\n  data: Array<Item>;\n\n  constructor(\n    client: APIClient,\n    response: Response,\n    body: CursorPageResponse<Item>,\n    options: FinalRequestOptions,\n  ) {\n    super(client, response, body, options);\n\n    this.data = body.data;\n  }\n\n  getPaginatedItems(): Item[] {\n    return this.data;\n  }\n\n  // @deprecated Please use `nextPageInfo()` instead\n  nextPageParams(): Partial<CursorPageParams> | null {\n    const info = this.nextPageInfo();\n    if (!info) return null;\n    if ('params' in info) return info.params;\n    const params = Object.fromEntries(info.url.searchParams);\n    if (!Object.keys(params).length) return null;\n    return params;\n  }\n\n  nextPageInfo(): PageInfo | null {\n    if (!this.data?.length) {\n      return null;\n    }\n\n    const next = this.data[this.data.length - 1]?.id;\n    if (!next) return null;\n    return { params: { after: next } };\n  }\n}\n"],"mappings":";;AAAA;;;;;AAEA,MAAAA,MAAA,GAAAC,OAAA;AAQA;;;AAGA,MAAaC,IAAW,SAAQF,MAAA,CAAAG,YAAkB;aAKhDC,CAAAC,MAAY,EAAiBC,QAAE,EAAkBC,IAAE,EAAwBC,OAAE,EAA4B;SACvG,CAAAH,MAAM,EAAAC,QAAQ,EAAAC,IAAU,EAAAC,OAAM;QAE9B,CAAAC,MAAK,GAAAF,IAAS,CAAAE,MAAK;QACnB,CAAAC,IAAK,GAAAH,IAAO,CAAAG,IAAK;;mBAGnBC,CAAA,EAAiB;WACf,IAAO,CAAAD,IAAK;;;;;;;gBAQdE,CAAA,EAAc;WACZ,IAAO;;cAGTC,CAAA,EAAY;WACV,IAAO;;;AA1BXC,OAAA,CAAAZ,IAAA,GAAAA,IAAA;AA8CA,MAAaa,UACX,SAAQf,MAAA,CAAAG,YAAkB;aAK1BC,CAAAC,MACE,EAAiBC,QACjB,EAAkBC,IAClB,EAA8BC,OAC9B,EAA4B;SAE5B,CAAAH,MAAM,EAAAC,QAAQ,EAAAC,IAAU,EAAAC,OAAM;QAE9B,CAAAE,IAAK,GAAAH,IAAO,CAAAG,IAAK;;mBAGnBC,CAAA,EAAiB;WACf,IAAO,CAAAD,IAAK;;;gBAIdE,CAAA,EAAc;UACZI,IAAM,OAAO,CAAAH,YAAK;QAClB,CAAAG,IAAK,SAAI;gBAAE,IAAOA,IAAK,SAAAA,IAAA,CAAAC,MAAA;UACvBA,MAAI,GAAAC,MAAY,CAAAC,WAAI,CAAAH,IAAA,CAAAI,GAAA,CAAAC,YAAA;eAAE,CAAAC,IAAO,CAAAL,MAAK,EAAAM,MAAO;WACzCN,MAAM;;cAC2BJ,CAAA;QACjCW,EAAA,EAAAC,EAAA;IACF,IAAC,GAAAD,EAAA,QAAAd,IAAA,cAAAc,EAAA,uBAAAA,EAAA,CAAAD,MAAA;MAED,WAAY;;UACVG,IAAK,IAAAD,EAAA,OAAK,CAAAf,IAAI,MAAAA,IAAA,CAAAa,MAAA,mBAAAE,EAAA,KAAE,KAAQ,aAAAA,EAAA,CAAAE,EAAA;aACtB,SAAO,IAAK;WACb;MAAAV,MAAA;QAAAW,KAAA,EAAAF;MAAA;IAAA;;;kBAGU,GAAOX,UAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}